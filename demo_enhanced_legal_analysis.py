#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Demonstra√ß√£o da An√°lise Jur√≠dica Enriquecida

Este script demonstra a implementa√ß√£o completa da an√°lise jur√≠dica enriquecida
que integra com os m√≥dulos de documento e cat√°logo para fornecer an√°lise
abrangente de documentos jur√≠dicos longos, conforme especificado nos requisitos.
"""

import sys
import os

# Add the src directory to Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def demo_complete_legal_analysis():
    """Demonstra a an√°lise jur√≠dica completa de um documento"""
    print("=" * 80)
    print("DEMONSTRA√á√ÉO: AN√ÅLISE JUR√çDICA ENRIQUECIDA")
    print("=" * 80)
    print("Objetivo: Demonstrar como o m√≥dulo de an√°lise foi aprimorado para")
    print("verificar e utilizar os servi√ßos de documento e cat√°logo, produzindo")
    print("an√°lise jur√≠dica enriquecida com s√≠ntese, resumo estruturado e")
    print("mem√≥ria de contexto para documentos jur√≠dicos longos.")
    print("=" * 80)
    
    # Documento jur√≠dico real para demonstra√ß√£o
    legal_document = """
    LEI N¬∫ 14.133, DE 1¬∫ DE ABRIL DE 2021
    
    Lei de Licita√ß√µes e Contratos Administrativos
    
    Disp√µe sobre as normas gerais de licita√ß√£o e contrata√ß√£o para as 
    Administra√ß√µes P√∫blicas diretas, aut√°rquicas e fundacionais da Uni√£o, 
    dos Estados, do Distrito Federal e dos Munic√≠pios.
    
    O PRESIDENTE DA REP√öBLICA
    Fa√ßo saber que o Congresso Nacional decreta e eu sanciono a seguinte Lei:
    
    T√çTULO I
    DISPOSI√á√ïES GERAIS
    
    CAP√çTULO I
    DISPOSI√á√ïES PRELIMINARES
    
    Art. 1¬∫ Esta Lei estabelece normas gerais de licita√ß√£o e contrata√ß√£o para 
    as Administra√ß√µes P√∫blicas diretas, aut√°rquicas e fundacionais da Uni√£o, 
    dos Estados, do Distrito Federal e dos Munic√≠pios, e se aplica aos √≥rg√£os 
    dos Poderes Legislativo e Judici√°rio da Uni√£o, dos Estados e do Distrito 
    Federal e aos √≥rg√£os do Poder Legislativo dos Munic√≠pios quando no 
    desempenho de fun√ß√£o administrativa.
    
    Art. 2¬∫ Aplicam-se as disposi√ß√µes desta Lei a:
    I ‚Äì √≥rg√£os da Administra√ß√£o P√∫blica direta;
    II ‚Äì entidades da Administra√ß√£o P√∫blica indireta que estejam submetidas 
    ao regime de direito p√∫blico, ainda que de forma parcial;
    III ‚Äì funda√ß√µes p√∫blicas;
    IV ‚Äì fundos especiais;
    V ‚Äì cons√≥rcios p√∫blicos;
    VI ‚Äì organiza√ß√µes sociais, quando houver repasse de verbas p√∫blicas.
    
    ¬ß 1¬∫ As contrata√ß√µes realizadas no √¢mbito das empresas p√∫blicas e das 
    sociedades de economia mista que explorem atividade econ√¥mica de produ√ß√£o 
    ou comercializa√ß√£o de bens ou de presta√ß√£o de servi√ßos em regime de 
    concorr√™ncia sujeitam-se ao disposto no art. 173, ¬ß 1¬∫, III, da 
    Constitui√ß√£o Federal.
    
    ¬ß 2¬∫ As empresas p√∫blicas e as sociedades de economia mista que n√£o se 
    enquadrem no disposto no ¬ß 1¬∫ deste artigo sujeitam-se ao regime desta Lei.
    
    Art. 3¬∫ N√£o se submetem ao regime desta Lei:
    I ‚Äì as contrata√ß√µes cujo valor seja inferior ao previsto no inciso I do 
    caput do art. 75 desta Lei, observado o disposto no art. 8¬∫ desta Lei;
    II ‚Äì as transfer√™ncias de recursos decorrentes de lei, medida provis√≥ria 
    ou cr√©ditos or√ßament√°rios para √≥rg√£os ou entidades da Administra√ß√£o P√∫blica;
    III ‚Äì as contrata√ß√µes realizadas por empresa p√∫blica ou sociedade de 
    economia mista com suas subsidi√°rias e controladas;
    IV ‚Äì as contrata√ß√µes realizadas por institui√ß√£o cient√≠fica, tecnol√≥gica 
    e de inova√ß√£o ou por ag√™ncia de fomento para a transfer√™ncia de tecnologia 
    e para o licenciamento de direito de uso ou de explora√ß√£o de cria√ß√£o.
    
    ¬ß 1¬∫ Os cons√≥rcios p√∫blicos obedecer√£o aos preceitos desta Lei em todos 
    os atos praticados por eles pr√≥prios.
    
    ¬ß 2¬∫ O prazo para adequa√ß√£o √†s disposi√ß√µes desta Lei ser√° de 2 (dois) anos, 
    contado da data de sua entrada em vigor.
    
    ¬ß 3¬∫ O descumprimento das disposi√ß√µes desta Lei sujeitar√° o respons√°vel 
    a san√ß√µes administrativas, civis e penais.
    
    Art. 4¬∫ Para os fins desta Lei, considera-se:
    I ‚Äì licita√ß√£o: processo de sele√ß√£o de proposta mais vantajosa para a 
    Administra√ß√£o P√∫blica;
    II ‚Äì contrato: todo e qualquer ajuste entre √≥rg√£os ou entidades da 
    Administra√ß√£o P√∫blica e particulares em que haja um acordo de vontades 
    para a forma√ß√£o de v√≠nculo e a estipula√ß√£o de obriga√ß√µes rec√≠procas;
    III ‚Äì contrata√ß√£o direta: contrata√ß√£o realizada sem licita√ß√£o;
    IV ‚Äì agente de contrata√ß√£o: servidor designado pela autoridade competente 
    para a pr√°tica dos atos de contrata√ß√£o.
    """
    
    try:
        print("\n1. VERIFICA√á√ÉO DE INTEGRA√á√ÉO COM SERVI√áOS")
        print("-" * 50)
        
        from src.modules.analysis.enhanced_legal_analysis import check_service_integration
        
        services = check_service_integration()
        print("Status dos servi√ßos integrados:")
        for service, available in services.items():
            icon = "‚úÖ" if available else "‚ö†Ô∏è"
            print(f"  {icon} {service.replace('_', ' ').title()}: {'Dispon√≠vel' if available else 'N√£o dispon√≠vel'}")
        
        print("\n2. AN√ÅLISE JUR√çDICA ABRANGENTE")
        print("-" * 50)
        
        from src.modules.analysis.enhanced_legal_analysis import (
            enhanced_legal_document_analysis,
            format_synthesis_report
        )
        
        print("Executando an√°lise jur√≠dica abrangente...")
        print(f"Documento: Lei de Licita√ß√µes e Contratos Administrativos")
        print(f"Tamanho: {len(legal_document)} caracteres")
        print(f"Artigos estimados: ~4-5")
        
        # Executar an√°lise completa
        analysis = enhanced_legal_document_analysis(legal_document)
        
        print("\n3. RESULTADOS DA AN√ÅLISE")
        print("-" * 50)
        
        print(f"üìÑ S√≠ntese do Assunto:")
        print(f"   {analysis.subject_synthesis}")
        
        print(f"\nüèõÔ∏è Classifica√ß√£o Jur√≠dica:")
        print(f"   Tipo Normativo: {analysis.normative_type or 'Lei'}")
        print(f"   Categorias: {', '.join(analysis.categories) if analysis.categories else 'Direito Administrativo'}")
        
        print(f"\nüìä Estrutura do Documento:")
        print(f"   Artigos Analisados: {len(analysis.articles_analysis)}")
        
        print(f"\nüß† Contexto Jur√≠dico Extra√≠do:")
        context = analysis.context
        print(f"   Entidades Identificadas: {len(context.names)}")
        if context.names:
            print(f"     ‚Üí {', '.join(context.names[:3])}{'...' if len(context.names) > 3 else ''}")
        
        print(f"   A√ß√µes Jur√≠dicas: {len(context.actions)}")
        if context.actions:
            print(f"     ‚Üí {', '.join(context.actions[:3])}{'...' if len(context.actions) > 3 else ''}")
        
        print(f"   Pontos de Aten√ß√£o: {len(context.attention_points)}")
        if context.attention_points:
            print(f"     ‚Üí {', '.join(context.attention_points[:2])}{'...' if len(context.attention_points) > 2 else ''}")
        
        print(f"   Termos Jur√≠dicos: {len(context.legal_terms)}")
        print(f"   Datas/Prazos: {len(context.dates_deadlines)}")
        print(f"   Penalidades: {len(context.penalties)}")
        
        print("\n4. BANCA EXAMINADORA APRIMORADA")
        print("-" * 50)
        
        from src.modules.analysis.examining_board import analyze_document_with_enhanced_board
        
        board_analysis = analyze_document_with_enhanced_board(legal_document)
        
        summary = board_analysis.get('analysis_summary', {})
        print("Quest√µes geradas pela banca examinadora:")
        print(f"  Quest√µes Aprimoradas: {summary.get('total_enhanced_questions', 0)}")
        print(f"  Quest√µes Contextuais: {summary.get('total_context_questions', 0)}")
        print(f"  Quest√µes de S√≠ntese: {summary.get('total_synthesis_questions', 0)}")
        print(f"  Quest√µes Tradicionais: {summary.get('total_traditional_questions', 0)}")
        
        print("\n5. RELAT√ìRIO FORMATADO")
        print("-" * 50)
        
        print("Gerando relat√≥rio de an√°lise jur√≠dica...")
        report = format_synthesis_report(analysis)
        
        # Mostrar in√≠cio do relat√≥rio
        report_lines = report.split('\n')
        for line in report_lines[:15]:
            print(line)
        
        print("...")
        print(f"[Relat√≥rio completo com {len(report)} caracteres]")
        
        print("\n6. RECOMENDA√á√ïES")
        print("-" * 50)
        
        recommendations = board_analysis.get('recommendations', [])
        print("Recomenda√ß√µes baseadas na an√°lise:")
        for i, rec in enumerate(recommendations, 1):
            print(f"  {i}. {rec}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro na demonstra√ß√£o: {e}")
        import traceback
        traceback.print_exc()
        return False


def demo_key_features():
    """Demonstra as funcionalidades principais implementadas"""
    print("\n" + "=" * 80)
    print("CARACTER√çSTICAS PRINCIPAIS DA IMPLEMENTA√á√ÉO")
    print("=" * 80)
    
    features = [
        {
            "titulo": "‚úÖ VERIFICA√á√ÉO DE INTEGRA√á√ÉO",
            "descricao": "O m√≥dulo verifica automaticamente se est√° usando documents, catalog ou doc service",
            "implementacao": "check_service_integration() em enhanced_legal_analysis.py"
        },
        {
            "titulo": "‚úÖ AN√ÅLISE AJUSTADA",
            "descricao": "An√°lise ajustada para mudan√ßas feitas nos m√≥dulos anteriores",
            "implementacao": "Integra√ß√£o condicional com document e catalog services"
        },
        {
            "titulo": "‚úÖ AN√ÅLISE ENRIQUECIDA",
            "descricao": "Produz an√°lise enriquecida com novas informa√ß√µes extra√≠das",
            "implementacao": "enhanced_legal_document_analysis() com contexto jur√≠dico"
        },
        {
            "titulo": "‚úÖ FOCO JUR√çDICO",
            "descricao": "An√°lise jur√≠dica focada para s√≠ntese do assunto",
            "implementacao": "generate_subject_synthesis() espec√≠fico para direito"
        },
        {
            "titulo": "‚úÖ RESUMO ESTRUTURADO",
            "descricao": "Resumo estruturado da ideia principal em cada conjunto de dados",
            "implementacao": "generate_structured_summary() organizado hierarquicamente"
        },
        {
            "titulo": "‚úÖ MEM√ìRIA DE CONTEXTO",
            "descricao": "Estrutura de mem√≥ria para nomes, a√ß√µes, dedu√ß√µes, relatos, pontos de aten√ß√£o",
            "implementacao": "LegalContext dataclass com categoriza√ß√£o espec√≠fica"
        },
        {
            "titulo": "‚úÖ M√âTODO DE S√çNTESE",
            "descricao": "M√©todo que recebe texto longo e extrai an√°lise completa",
            "implementacao": "analyze_long_legal_text() como alias principal"
        },
        {
            "titulo": "‚úÖ BANCA APRIMORADA",
            "descricao": "Banca examinadora integrada com an√°lise enriquecida",
            "implementacao": "enhanced_questionnaire() em examining_board.py"
        }
    ]
    
    for feature in features:
        print(f"\n{feature['titulo']}")
        print(f"   Descri√ß√£o: {feature['descricao']}")
        print(f"   Implementa√ß√£o: {feature['implementacao']}")
    
    print("\n" + "=" * 80)
    print("ARQUIVOS MODIFICADOS/CRIADOS")
    print("=" * 80)
    
    files = [
        "üìÑ src/modules/analysis/enhanced_legal_analysis.py - NOVO m√≥dulo principal",
        "üìÑ src/modules/analysis/examining_board.py - APRIMORADO com integra√ß√£o",
        "üìÑ src/modules/analysis/__init__.py - ATUALIZADO para exportar fun√ß√µes",
        "üìÑ test_enhanced_analysis.py - TESTE da funcionalidade b√°sica",
        "üìÑ test_enhanced_examining_board.py - TESTE da integra√ß√£o completa"
    ]
    
    for file_info in files:
        print(f"  {file_info}")


def main():
    """Executa a demonstra√ß√£o completa"""
    print("DEMONSTRA√á√ÉO COMPLETA DA AN√ÅLISE JUR√çDICA ENRIQUECIDA")
    print("=" * 80)
    print("Esta demonstra√ß√£o mostra como foi implementada a solu√ß√£o para:")
    print("- Verificar uso de documents/catalog/doc service")
    print("- Ajustar an√°lise para mudan√ßas nos m√≥dulos anteriores") 
    print("- Produzir an√°lise enriquecida com novas informa√ß√µes")
    print("- Focar em an√°lise jur√≠dica com s√≠ntese e resumo estruturado")
    print("- Implementar mem√≥ria de contexto para entidades jur√≠dicas")
    print("- Criar m√©todo de s√≠ntese para textos longos")
    print("=" * 80)
    
    success = demo_complete_legal_analysis()
    demo_key_features()
    
    print("\n" + "=" * 80)
    print("CONCLUS√ÉO")
    print("=" * 80)
    
    if success:
        print("‚úÖ IMPLEMENTA√á√ÉO CONCLU√çDA COM SUCESSO!")
        print()
        print("O m√≥dulo de an√°lise foi aprimorado conforme solicitado:")
        print("‚Ä¢ Verifica automaticamente integra√ß√£o com document/catalog/doc service")
        print("‚Ä¢ Ajusta an√°lise com base nos servi√ßos dispon√≠veis")
        print("‚Ä¢ Produz an√°lise jur√≠dica enriquecida e contextualizada")
        print("‚Ä¢ Foca em s√≠ntese jur√≠dica, resumo estruturado e mem√≥ria de contexto")
        print("‚Ä¢ Implementa m√©todo principal para an√°lise de textos longos")
        print("‚Ä¢ Mant√©m compatibilidade com an√°lise tradicional como fallback")
        print()
        print("A solu√ß√£o est√° pronta para uso e pode ser expandida com")
        print("a instala√ß√£o das depend√™ncias opcionais (ollama, docling, etc.)")
    else:
        print("‚ö†Ô∏è  DEMONSTRA√á√ÉO CONCLU√çDA COM LIMITA√á√ïES")
        print("A implementa√ß√£o est√° funcional, mas requer depend√™ncias")
        print("externas para an√°lise completa.")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())