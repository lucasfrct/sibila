#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Teste da funcionalidade de an√°lise jur√≠dica aprimorada.

Este script testa a integra√ß√£o do m√≥dulo de an√°lise com os servi√ßos
de documento e cat√°logo, focando na an√°lise jur√≠dica abrangente.
"""

import sys
import os

# Add the src directory to Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

def test_service_integration():
    """Testa a verifica√ß√£o de integra√ß√£o com servi√ßos"""
    print("=" * 60)
    print("TESTE: Verifica√ß√£o de Integra√ß√£o de Servi√ßos")
    print("=" * 60)
    
    try:
        from src.modules.analysis.enhanced_legal_analysis import check_service_integration
        
        status = check_service_integration()
        print("Status dos servi√ßos:")
        for service, available in status.items():
            status_text = "‚úì Dispon√≠vel" if available else "‚úó N√£o dispon√≠vel"
            print(f"  {service}: {status_text}")
        
        return True
    except Exception as e:
        print(f"Erro no teste de integra√ß√£o: {e}")
        return False

def test_legal_context_extraction():
    """Testa a extra√ß√£o de contexto jur√≠dico"""
    print("\n" + "=" * 60)
    print("TESTE: Extra√ß√£o de Contexto Jur√≠dico")
    print("=" * 60)
    
    try:
        from src.modules.analysis.enhanced_legal_analysis import extract_legal_context
        
        # Texto jur√≠dico de exemplo
        sample_text = """
        Art. 5¬∫ Todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza,
        garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a 
        inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa
        e √† propriedade, nos termos seguintes:
        
        I - homens e mulheres s√£o iguais em direitos e obriga√ß√µes;
        II - ningu√©m ser√° obrigado a fazer ou deixar de fazer alguma coisa 
        sen√£o em virtude de lei;
        
        ¬ß 1¬∫ A aplica√ß√£o desta lei ser√° realizada no prazo de 30 dias.
        ¬ß 2¬∫ O descumprimento desta norma resultar√° em multa de R$ 1.000,00.
        """
        
        print("Texto de exemplo para an√°lise:")
        print(sample_text[:200] + "...")
        
        context = extract_legal_context(sample_text)
        
        print(f"\nContexto extra√≠do:")
        print(f"  Nomes/Entidades: {len(context.names)} identificados")
        print(f"  A√ß√µes: {len(context.actions)} identificadas")
        print(f"  Pontos de aten√ß√£o: {len(context.attention_points)} identificados")
        print(f"  Termos jur√≠dicos: {len(context.legal_terms)} identificados")
        print(f"  Datas/Prazos: {len(context.dates_deadlines)} identificados")
        print(f"  Penalidades: {len(context.penalties)} identificadas")
        
        return True
    except Exception as e:
        print(f"Erro no teste de extra√ß√£o de contexto: {e}")
        return False

def test_synthesis_generation():
    """Testa a gera√ß√£o de s√≠ntese jur√≠dica"""
    print("\n" + "=" * 60)
    print("TESTE: Gera√ß√£o de S√≠ntese")
    print("=" * 60)
    
    try:
        from src.modules.analysis.enhanced_legal_analysis import (
            generate_subject_synthesis,
            generate_structured_summary
        )
        
        sample_text = """
        Lei n¬∫ 12.527, de 18 de novembro de 2011
        Regula o acesso a informa√ß√µes previsto no inciso XXXIII do art. 5¬∫, 
        no inciso II do ¬ß 3¬∫ do art. 37 e no ¬ß 2¬∫ do art. 216 da Constitui√ß√£o Federal.
        
        Art. 1¬∫ Esta Lei disp√µe sobre os procedimentos a serem observados pela Uni√£o, 
        Estados, Distrito Federal e Munic√≠pios, com o fim de garantir o acesso a informa√ß√µes.
        
        Art. 2¬∫ Aplicam-se as disposi√ß√µes desta Lei, no que couber:
        I - aos √≥rg√£os p√∫blicos integrantes da administra√ß√£o direta;
        II - √†s autarquias, √†s funda√ß√µes p√∫blicas, √†s empresas p√∫blicas.
        """
        
        print("Gerando s√≠ntese do assunto...")
        synthesis = generate_subject_synthesis(sample_text)
        print(f"S√≠ntese: {synthesis}")
        
        print("\nGerando resumo estruturado...")
        summary = generate_structured_summary(sample_text)
        print(f"Resumo estruturado: {summary[:200]}...")
        
        return True
    except Exception as e:
        print(f"Erro no teste de s√≠ntese: {e}")
        return False

def test_enhanced_analysis():
    """Testa a an√°lise jur√≠dica abrangente"""
    print("\n" + "=" * 60)
    print("TESTE: An√°lise Jur√≠dica Abrangente")
    print("=" * 60)
    
    try:
        from src.modules.analysis.enhanced_legal_analysis import (
            enhanced_legal_document_analysis,
            format_synthesis_report
        )
        
        sample_legal_document = """
        DECRETO N¬∫ 10.139, DE 28 DE NOVEMBRO DE 2019
        
        Disp√µe sobre a revis√£o e a consolida√ß√£o dos atos normativos inferiores a decreto.
        
        O PRESIDENTE DA REP√öBLICA, no uso da atribui√ß√£o que lhe confere o art. 84, 
        caput, inciso IV, da Constitui√ß√£o Federal, e tendo em vista o disposto na 
        Lei Complementar n¬∫ 95, de 26 de fevereiro de 1998,
        
        DECRETA:
        
        Art. 1¬∫ Os Minist√©rios e √≥rg√£os da Presid√™ncia da Rep√∫blica proceder√£o √† 
        revis√£o e √† consolida√ß√£o dos atos normativos que editaram.
        
        ¬ß 1¬∫ A revis√£o e a consolida√ß√£o de que trata o caput ser√£o realizadas no 
        prazo de dois anos, contado da data de publica√ß√£o deste Decreto.
        
        ¬ß 2¬∫ O descumprimento do prazo estabelecido no ¬ß 1¬∫ implicar√° 
        responsabiliza√ß√£o do agente p√∫blico competente.
        
        Art. 2¬∫ Na revis√£o dos atos normativos, dever√£o ser observados os seguintes crit√©rios:
        I - necessidade e adequa√ß√£o da norma para o atendimento do interesse p√∫blico;
        II - efic√°cia da norma para o alcance dos objetivos pretendidos;
        III - efici√™ncia na utiliza√ß√£o dos recursos dispon√≠veis.
        
        Art. 3¬∫ Este Decreto entra em vigor na data de sua publica√ß√£o.
        
        Bras√≠lia, 28 de novembro de 2019; 198¬∫ da Independ√™ncia e 131¬∫ da Rep√∫blica.
        JAIR MESSIAS BOLSONARO
        """
        
        print("Executando an√°lise jur√≠dica abrangente...")
        print("Texto do documento:")
        print(sample_legal_document[:300] + "...")
        
        # Executar an√°lise completa
        analysis_result = enhanced_legal_document_analysis(sample_legal_document)
        
        print(f"\nResultado da an√°lise:")
        print(f"  S√≠ntese do assunto: {analysis_result.subject_synthesis[:100]}...")
        print(f"  Tipo normativo: {analysis_result.normative_type}")
        print(f"  Categorias: {', '.join(analysis_result.categories) if analysis_result.categories else 'Nenhuma'}")
        print(f"  Artigos analisados: {len(analysis_result.articles_analysis)}")
        print(f"  Entidades no contexto: {len(analysis_result.context.names)}")
        
        # Gerar relat√≥rio formatado
        print("\nGerando relat√≥rio formatado...")
        report = format_synthesis_report(analysis_result)
        print("Relat√≥rio gerado com sucesso!")
        print(f"Tamanho do relat√≥rio: {len(report)} caracteres")
        
        return True
    except Exception as e:
        print(f"Erro no teste de an√°lise abrangente: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_import_functionality():
    """Testa se as importa√ß√µes do m√≥dulo funcionam corretamente"""
    print("\n" + "=" * 60)
    print("TESTE: Importa√ß√£o de Funcionalidades")
    print("=" * 60)
    
    try:
        # Teste de importa√ß√£o direta
        from src.modules.analysis import enhanced_legal_analysis
        print("‚úì Importa√ß√£o do m√≥dulo enhanced_legal_analysis bem-sucedida")
        
        # Teste de importa√ß√£o via __init__
        from src.modules.analysis import (
            enhanced_legal_document_analysis,
            check_service_integration,
            ENHANCED_ANALYSIS_AVAILABLE
        )
        print("‚úì Importa√ß√£o via __init__.py bem-sucedida")
        print(f"‚úì Enhanced analysis dispon√≠vel: {ENHANCED_ANALYSIS_AVAILABLE}")
        
        return True
    except Exception as e:
        print(f"‚úó Erro na importa√ß√£o: {e}")
        return False

def main():
    """Executa todos os testes"""
    print("TESTE DO M√ìDULO DE AN√ÅLISE JUR√çDICA APRIMORADA")
    print("=" * 80)
    
    tests = [
        ("Importa√ß√£o", test_import_functionality),
        ("Integra√ß√£o de Servi√ßos", test_service_integration),
        ("Extra√ß√£o de Contexto", test_legal_context_extraction),
        ("Gera√ß√£o de S√≠ntese", test_synthesis_generation),
        ("An√°lise Abrangente", test_enhanced_analysis)
    ]
    
    results = {}
    for test_name, test_func in tests:
        try:
            results[test_name] = test_func()
        except Exception as e:
            print(f"Erro fatal no teste {test_name}: {e}")
            results[test_name] = False
    
    # Resumo dos resultados
    print("\n" + "=" * 80)
    print("RESUMO DOS TESTES")
    print("=" * 80)
    
    for test_name, success in results.items():
        status = "‚úì PASSOU" if success else "‚úó FALHOU"
        print(f"{test_name}: {status}")
    
    total_tests = len(results)
    passed_tests = sum(results.values())
    
    print(f"\nTotal: {passed_tests}/{total_tests} testes passaram")
    
    if passed_tests == total_tests:
        print("üéâ Todos os testes passaram!")
        return 0
    else:
        print("‚ö†Ô∏è  Alguns testes falharam")
        return 1

if __name__ == "__main__":
    sys.exit(main())